# Trigger pipeline when there's code changes committed to main branch:
trigger:
  - main 

# Checkout ADOCS and AWS templates:
resources:
  repositories:
  # ADOCS shared templates (https://github.com/ACRCode/ADOCS-templates):
  - repository: azureSharedTemplates
    type: github
    endpoint: ACRCode
    name: ACRCode/ADOCS-templates
    branch: master
    # AWS cloudformation templates (https://github.com/ACRCode/InfrastructureAsCode):
  - repository: InfrastureAsCode
    type: github
    endpoint: ACRCode
    name: ACRCode/InfrastructureAsCode
    branch: main

# Not sure if the following snippet is needed:
# variables:
#   - group: Project Variable

# Provide custom parameters defined in the ADOCS shared template:
extends:
  template: shared-template.yml@azureSharedTemplates
  parameters:
    # Build & Test:
    buildPoolImage: 'ubuntu-latest'
    buildVersionMajor: 1
    buildVersionMinor: 0
    buildSteps:
      - checkout: self
      - task: NodeTool@0
        displayName: 'Install Node.js'
        inputs:
          versionSpec: '14.x'
      - script: |
          npm install -g @angular/cli
          npm install
        displayName: 'Install NPM Dependencies'
      - script: |
          ng build --configuration=production --output-path $(Build.Artifactstagingdirectory)
        displayName: 'Build Angular Project'
      - script: |
          npm run test-headless
        displayName: 'Run Unit Tests'
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.Artifactstagingdirectory)'
          artifact: 'CICE-Frontend'
          publishLocation: 'pipeline'
      - task: ArchiveFiles@2
        displayName: Create archive for front code
        inputs:
          rootFolderOrFile: '$(Build.Artifactstagingdirectory)'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.Artifactstagingdirectory)/CICE-Frontend.$(Build.BuildNumber).zip'
          replaceExistingArchive: true
      - publish: $(Build.Artifactstagingdirectory)/CICE-Frontend.$(Build.BuildNumber).zip
        artifact: CICE-Frontend-zip
      #Publish CloudFormationTemplates as artifacs
      #########Start: Tasks to check out cloudformation template from repository IngrastureAsCode
      # - checkout: InfrastureAsCode
      #   path: CloudFormationTemplates
      # - task: PublishPipelineArtifact@1
      #   inputs:
      #     targetPath: '$(Pipeline.Workspace)/CloudFormationTemplates/AWS/Project-AdocsTraining'
      #     artifact: 'CloudFormationTemplates'
      #     publishLocation: 'pipeline'
      #########End
      ####Start: Task to Check out cloudformation templates from same project repository
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.SourcesDirectory)/CloudFormationTemplates'
          artifact: 'CloudFormationTemplates'
          publishLocation: 'pipeline'
      ####END
    # Security Scan:
    securityScanAgentPool: 'Local Agents'
    runCheckMarxScan: false
    CheckmarxServiceConnection: 'ACR Checkmarx'
    CheckmarxProject: 'ADOCSTraining'
    CheckmarxCustomPreset: 'ACR Default'
    CheckmarxFullTeamName: 'CxServer\SOC\ACR\All\Dev\ADOCS'
    CheckmarxFolderExclusion: 'cvs, .svn, .hg , .git, .bzr, bin , obj,  backup, .idea, node_modules'
    runIQScan: false
    NexusServiceConnection: 'ACR Nexus IQ'
    NexusAppId: 'ADOCSTraining'
    NexusScanStage: 'Build'
    ArtifactsForNexusScan: ''
    NexusScanTarget: '$(Build.SourcesDirectory)/Nexus/**/**.zip'